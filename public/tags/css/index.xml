<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on TIL</title>
    <link>https://til.neilmagee.com/tags/css/</link>
    <description>Recent content in css on TIL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 19 Nov 2018 14:54:11 +0000</lastBuildDate>
    
	<atom:link href="https://til.neilmagee.com/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tachyons Components</title>
      <link>https://til.neilmagee.com/post/tachyons-components/</link>
      <pubDate>Mon, 19 Nov 2018 14:54:11 +0000</pubDate>
      
      <guid>https://til.neilmagee.com/post/tachyons-components/</guid>
      <description>&lt;p&gt;Today I learned a bit more about using &lt;a href=&#34;http://tachyons.io/&#34;&gt;Tachyons&lt;/a&gt; to make components. I read about Tachyons a long time ago and had a pretty common reaction to it which was to dismiss it outright. I come from a background of having learnt CSS when semantics were being preached. Carefully named classes were chosen for their meaning, and keeping styles out of HTML was important.&lt;/p&gt;

&lt;p&gt;But my views have matured over time as I started to use BEM for CSS naming and realised the limitations of creating classes and how rubbish humans are at naming things. Especially when maintaining larger systems. I read &lt;a href=&#34;https://hackernoon.com/full-re-write-with-tachyons-and-functional-css-a-case-study-part-1-635ccb5fb00b&#34;&gt;articles&lt;/a&gt; about &lt;a href=&#34;https://adamwathan.me/css-utility-classes-and-separation-of-concerns/&#34;&gt;utility classes&lt;/a&gt; and slowly I began to agree with their perspective.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>