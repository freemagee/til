<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>meta on Front-end web development | Neil Magee</title><link>https://til.neilmagee.com/tags/meta/</link><description>Recent content in meta on Front-end web development | Neil Magee</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 12 Dec 2019 09:45:52 +0000</lastBuildDate><atom:link href="https://til.neilmagee.com/tags/meta/index.xml" rel="self" type="application/rss+xml"/><item><title>Subtle art of performance wins</title><link>https://til.neilmagee.com/post/subtle-art-of-performance-wins/</link><pubDate>Thu, 12 Dec 2019 09:45:52 +0000</pubDate><guid>https://til.neilmagee.com/post/subtle-art-of-performance-wins/</guid><description>&lt;p>Today I learned more about the subtle art of javascript performance. I have been doing a few algorithm challenges on &lt;a href="https://www.freecodecamp.org/">freeCodeCamp&lt;/a>, which is a great resource. Whilst completing one titled &lt;em>&amp;ldquo;Intermediate Algorithm Scripting: Smallest Common Multiple&amp;rdquo;&lt;/em> I had a look at what other solutions people had posted, and how they compared to mine. A user had put together a CodePen running &lt;a href="https://benchmarkjs.com/">BenchmarkJS&lt;/a> that contained about four solutions. I added my solution (below) to the benchmark test and the results were surprising.&lt;/p></description></item><item><title>Declarative vs. Imperative programming</title><link>https://til.neilmagee.com/post/declarative-vs.-imperative-programming/</link><pubDate>Mon, 09 Sep 2019 18:11:45 +0100</pubDate><guid>https://til.neilmagee.com/post/declarative-vs.-imperative-programming/</guid><description>&lt;p>Today I learned more about the distinction between &lt;em>declarative&lt;/em> and &lt;em>imperative&lt;/em> programming. I have seen the terms used in various places, but I could not give a good explanation about what they mean. So with a bit of curiosity and I thought that I would get a better handle on the definition.&lt;/p>
&lt;blockquote>
&lt;p>Imperative programming is like &lt;strong>how&lt;/strong> you do something, and declarative programming is more like &lt;strong>what&lt;/strong> you do.&lt;/p>
&lt;/blockquote></description></item><item><title>Authentication vs. Authorisation</title><link>https://til.neilmagee.com/post/authentication-vs.-authorisation/</link><pubDate>Tue, 09 Apr 2019 12:26:24 +0100</pubDate><guid>https://til.neilmagee.com/post/authentication-vs.-authorisation/</guid><description>&lt;p>Today I learned more about the distinction between &lt;em>authentication&lt;/em> and &lt;em>authorisation&lt;/em>. I have probably thought of those terms as being synonymous with eachother and fulfilling the same needs. But I was wrong.&lt;/p></description></item></channel></rss>