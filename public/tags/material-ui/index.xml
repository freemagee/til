<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>material-ui on Front-end web development | Neil Magee</title><link>https://til.neilmagee.com/tags/material-ui/</link><description>Recent content in material-ui on Front-end web development | Neil Magee</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 05 Aug 2019 11:54:29 +0100</lastBuildDate><atom:link href="https://til.neilmagee.com/tags/material-ui/index.xml" rel="self" type="application/rss+xml"/><item><title>Material UI theming and style overrides - Part 5</title><link>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-5/</link><pubDate>Mon, 05 Aug 2019 11:54:29 +0100</pubDate><guid>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-5/</guid><description>&lt;p>Today I learned that sometimes a &lt;strong>refactor&lt;/strong> is not always better, just &lt;em>different&lt;/em>. I followed through with my plan to split my styles out into individual modules:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="c1">// Example styles module &amp;#39;body.js&amp;#39;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="nx">CustomTheme&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;../../Theme&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">formBuilder&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">paddingBottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">formBuilderContainer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">maxWidth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;770px&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">padding&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That module sits in a &lt;code>/Styles&lt;/code> folder, at the same level as my container component, and is exposed via an &lt;code>index.js&lt;/code> file like so:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">as&lt;/span> &lt;span class="nx">body&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;./body&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Material UI theming and style overrides - Part 4</title><link>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-4/</link><pubDate>Fri, 02 Aug 2019 14:49:47 +0100</pubDate><guid>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-4/</guid><description>&lt;p>Today I learned I still don&amp;rsquo;t have a good answer when it comes to managing &lt;strong>CSS-in-JS&lt;/strong>. &lt;a href="https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-pt3/">Last time&lt;/a> I discussed this topic I had decided to make a single &lt;code>Styles.js&lt;/code> object that contained style overrides to Material UI. I consolidated all my components styles into that &lt;code>Styles.js&lt;/code> file. Abbreviated example below:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">import&lt;/span> &lt;span class="nx">CustomTheme&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;../Theme&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Styles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">formPreviewContainer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">maxWidth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;770px&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">paddingTop&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">paddingBottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">formHeader&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">position&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;relative&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">paddingTop&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">paddingBottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">paddingLeft&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">paddingRight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">marginBottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">spacing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">backgroundColor&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">palette&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primary&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">main&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// ... other styles omitted for brevity ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">textInput&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;&amp;amp; .MuiInput-underline:before&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">borderBottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`1px solid &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">palette&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">grey&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">breakpoints&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">down&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;sm&amp;#34;&lt;/span>&lt;span class="p">)]&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;100%&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">breakpoints&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">up&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;md&amp;#34;&lt;/span>&lt;span class="p">)]&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;50%&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">textArea&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;100%&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;&amp;amp; .MuiInputBase-input&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">lineHeight&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;24px&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="s2">&amp;#34;&amp;amp; .MuiInput-underline:before&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">borderBottom&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`1px solid &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">CustomTheme&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">palette&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">grey&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">Styles&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Material UI theming and style overrides - Part 3</title><link>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-3/</link><pubDate>Fri, 31 May 2019 14:54:14 +0100</pubDate><guid>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-3/</guid><description>&lt;p>Today I learned more about sharing styles across React components. Although CSS-in-JS is new to me, it is pretty easy to pick up (&lt;em>Although I have not formed a final opinion on it yet&amp;hellip;&lt;/em>). I think Material UI uses &lt;a href="https://github.com/cssinjs/react-jss">React JSS&lt;/a> under the hood, so a style can be written as an object:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">import&lt;/span> &lt;span class="nx">React&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">makeStyles&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@material-ui/styles&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">useStyles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">makeStyles&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">root&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">backgroundColor&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;red&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">MyComponent&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">classes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useStyles&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span> &lt;span class="nx">className&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">classes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">root&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="refactor-to-be-more-dry">Refactor to be more DRY&lt;/h2>
&lt;p>I had three components that were pretty similar to each other, with enough unique parts to keep them seperate. But they all had a style object in them. I could see the &lt;strong>style object was about 90% duplicated&lt;/strong> between each component. So after using a diff tool to see what the differences were, I extracted the shared styles out into a new file called &lt;code>Styles.js&lt;/code>. That looks a little like this:&lt;/p></description></item><item><title>Material UI theming and style overrides - Part 2</title><link>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-2/</link><pubDate>Tue, 28 May 2019 11:02:49 +0100</pubDate><guid>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-2/</guid><description>&lt;p>Today I learned that my previous attempt at theming a &lt;em>Material UI&lt;/em> component was not right. I thought the &lt;em>default theme&lt;/em> overrides I was providing were also being used in the &lt;em>component style&lt;/em> overrides. But they were not.&lt;/p>
&lt;p>After debugging the theme object in Chrome, I could see that before &lt;code>useStyles()&lt;/code> was called, my theme object was as expected, with my colour set. But the when I stepped into the &lt;code>useStyles()&lt;/code> function and observed the theme object it was using, the colour was not right. I had assumed that the styles argument that &lt;code>makeStyles&lt;/code> took was my &lt;em>global&lt;/em> &lt;code>theme&lt;/code> object. The &lt;code>AppBar&lt;/code> background was yellow, so the theme was working in general, just not for my &lt;em>component style&lt;/em> overrides.&lt;/p>
&lt;p>I put a &lt;a href="https://codesandbox.io/s/fervent-meninsky-hqnlq">CodeSandbox&lt;/a> together to illustrate the differences:&lt;/p></description></item><item><title>Material UI theming and style overrides - Part 1</title><link>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-1/</link><pubDate>Fri, 24 May 2019 12:37:01 +0100</pubDate><guid>https://til.neilmagee.com/post/material-ui-theming-and-style-overrides-part-1/</guid><description>&lt;p>Today I learned how to extend the Material UI &lt;a href="https://material-ui.com/customization/themes/">default theme&lt;/a> and retain the default theme settings for my own style overrides.&lt;/p>
&lt;p>This takes a little explaining. The &lt;strong>Theme&lt;/strong> in Material UI is responsible for the higher level styling. It contains settings for the colour palette, typography and other useful helper methods such as &lt;code>theme.spacing()&lt;/code>. &lt;strong>Style overrides&lt;/strong> I would define as fine level style changes of the Material UI components, for example changing the thickness of an underline on a input component.&lt;/p></description></item><item><title>Front-end test drive: Material UI</title><link>https://til.neilmagee.com/post/front-end-test-drive-material-ui/</link><pubDate>Thu, 16 May 2019 16:37:08 +0100</pubDate><guid>https://til.neilmagee.com/post/front-end-test-drive-material-ui/</guid><description>&lt;p>Today I learned how to apply style overrides to &lt;a href="https://next.material-ui.com">Material UI&lt;/a> (v4.0.0-beat.2), a React front-end component library.&lt;/p>
&lt;p>The company I work for is looking to develop some new tools, which we want to get to a prototype stage as soon as possible. We have decided to use React as part of our tech stack (&lt;em>which is good&lt;/em>), and knowing that the UI that these tools require is going to need a lot of UI components, I started to look at front-end component libraries (mainly Material UI and Ant Design).&lt;/p>
&lt;p>I did a analysis of the types of UI components we need to build our tool - tooltips, various inputs, switch style buttons, modals, dialogs &amp;amp; drop downs. I wanted to make a test &amp;lsquo;App&amp;rsquo; that would combine various components from the library. My main goal was to see how this library was going to be to work with.&lt;/p></description></item></channel></rss>