<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>material-ui on TIL</title><link>https://til.neilmagee.com/tags/material-ui/</link><description>Recent content in material-ui on TIL</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 28 May 2019 11:02:49 +0100</lastBuildDate><atom:link href="https://til.neilmagee.com/tags/material-ui/index.xml" rel="self" type="application/rss+xml"/><item><title>Material UI theming and style overrides - Part 2</title><link>https://til.neilmagee.com/posts/material-ui-theming-and-style-overrides-pt2/</link><pubDate>Tue, 28 May 2019 11:02:49 +0100</pubDate><guid>https://til.neilmagee.com/posts/material-ui-theming-and-style-overrides-pt2/</guid><description>&lt;p&gt;Today I learned that my previous attempt at theming a &lt;em&gt;Material UI&lt;/em&gt; component was not right. I thought the &lt;em&gt;default theme&lt;/em&gt; overrides I was providing were also being used in the &lt;em&gt;component style&lt;/em&gt; overrides. But they were not.&lt;/p&gt;
&lt;p&gt;After debugging the theme object in Chrome, I could see that before &lt;code&gt;useStyles()&lt;/code&gt; was called, my theme object was as expected, with my colour set. But the when I stepped into the &lt;code&gt;useStyles()&lt;/code&gt; function and observed the theme object it was using, the colour was not right. I had assumed that the styles argument that &lt;code&gt;makeStyles&lt;/code&gt; took was my &lt;em&gt;global&lt;/em&gt; &lt;code&gt;theme&lt;/code&gt; object. The &lt;code&gt;AppBar&lt;/code&gt; background was yellow, so the theme was working in general, just not for my &lt;em&gt;component style&lt;/em&gt; overrides.&lt;/p&gt;
&lt;p&gt;I put a &lt;a href=&#34;https://codesandbox.io/s/fervent-meninsky-hqnlq&#34;&gt;CodeSandbox&lt;/a&gt; together to illustrate the differences:&lt;/p&gt;</description></item><item><title>Material UI theming and style overrides - Part 1</title><link>https://til.neilmagee.com/posts/material-ui-theming-and-style-overrides-pt1/</link><pubDate>Fri, 24 May 2019 12:37:01 +0100</pubDate><guid>https://til.neilmagee.com/posts/material-ui-theming-and-style-overrides-pt1/</guid><description>&lt;p&gt;Today I learned how to extend the Material UI &lt;a href=&#34;https://material-ui.com/customization/themes/&#34;&gt;default theme&lt;/a&gt; and retain the default theme settings for my own style overrides.&lt;/p&gt;
&lt;p&gt;This takes a little explaining. The &lt;strong&gt;Theme&lt;/strong&gt; in Material UI is responsible for the higher level styling. It contains settings for the colour palette, typography and other useful helper methods such as &lt;code&gt;theme.spacing()&lt;/code&gt;. &lt;strong&gt;Style overrides&lt;/strong&gt; I would define as fine level style changes of the Material UI components, for example changing the thickness of an underline on a input component.&lt;/p&gt;</description></item><item><title>Front-end test drive: Material UI</title><link>https://til.neilmagee.com/posts/frontend-test-drive-material-ui/</link><pubDate>Thu, 16 May 2019 16:37:08 +0100</pubDate><guid>https://til.neilmagee.com/posts/frontend-test-drive-material-ui/</guid><description>&lt;p&gt;Today I learned how to apply style overrides to &lt;a href=&#34;https://next.material-ui.com&#34;&gt;Material UI&lt;/a&gt; (v4.0.0-beat.2), a React front-end component library.&lt;/p&gt;
&lt;p&gt;The company I work for is looking to develop some new tools, which we want to get to a prototype stage as soon as possible. We have decided to use React as part of our tech stack (&lt;em&gt;which is good&lt;/em&gt;), and knowing that the UI that these tools require is going to need a lot of UI components, I started to look at front-end component libraries (mainly Material UI and Ant Design).&lt;/p&gt;
&lt;p&gt;I did a analysis of the types of UI components we need to build our tool - tooltips, various inputs, switch style buttons, modals, dialogs &amp;amp; drop downs. I wanted to make a test &amp;lsquo;App&amp;rsquo; that would combine various components from the library. My main goal was to see how this library was going to be to work with.&lt;/p&gt;</description></item></channel></rss>